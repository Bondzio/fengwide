////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2009 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: L.70
//  \   \         Application: netgen
//  /   /         Filename: mlt_11_2_70b0fe6ba250d126.v
// /___/   /\     Timestamp: Thu Oct 20 18:05:16 2011
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -intstyle ise -w -sim -ofmt verilog ./tmp/_cg/mlt_11_2_70b0fe6ba250d126.ngc ./tmp/_cg/mlt_11_2_70b0fe6ba250d126.v 
// Device	: 5vlx20tff323-2
// Input file	: ./tmp/_cg/mlt_11_2_70b0fe6ba250d126.ngc
// Output file	: ./tmp/_cg/mlt_11_2_70b0fe6ba250d126.v
// # of Modules	: 1
// Design Name	: mlt_11_2_70b0fe6ba250d126
// Xilinx        : /tools/xilinx/11.5/ISE
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module mlt_11_2_70b0fe6ba250d126 (
  sclr, ce, clk, a, b, p
)/* synthesis syn_black_box syn_noprune=1 */;
  input sclr;
  input ce;
  input clk;
  input [17 : 0] a;
  input [17 : 0] b;
  output [35 : 0] p;
  
  // synthesis translate_off
  
  wire \blk00000003/sig000000dd ;
  wire \blk00000003/sig000000dc ;
  wire \blk00000003/sig000000db ;
  wire \blk00000003/sig000000da ;
  wire \blk00000003/sig000000d9 ;
  wire \blk00000003/sig000000d8 ;
  wire \blk00000003/sig000000d7 ;
  wire \blk00000003/sig000000d6 ;
  wire \blk00000003/sig000000d5 ;
  wire \blk00000003/sig000000d4 ;
  wire \blk00000003/sig000000d3 ;
  wire \blk00000003/sig000000d2 ;
  wire \blk00000003/sig000000d1 ;
  wire \blk00000003/sig000000d0 ;
  wire \blk00000003/sig000000cf ;
  wire \blk00000003/sig000000ce ;
  wire \blk00000003/sig000000cd ;
  wire \blk00000003/sig000000cc ;
  wire \blk00000003/sig000000cb ;
  wire \blk00000003/sig000000ca ;
  wire \blk00000003/sig000000c9 ;
  wire \blk00000003/sig000000c8 ;
  wire \blk00000003/sig000000c7 ;
  wire \blk00000003/sig000000c6 ;
  wire \blk00000003/sig000000c5 ;
  wire \blk00000003/sig000000c4 ;
  wire \blk00000003/sig000000c3 ;
  wire \blk00000003/sig000000c2 ;
  wire \blk00000003/sig000000c1 ;
  wire \blk00000003/sig000000c0 ;
  wire \blk00000003/sig000000bf ;
  wire \blk00000003/sig000000be ;
  wire \blk00000003/sig000000bd ;
  wire \blk00000003/sig000000bc ;
  wire \blk00000003/sig000000bb ;
  wire \blk00000003/sig000000ba ;
  wire \blk00000003/sig000000b9 ;
  wire \blk00000003/sig000000b8 ;
  wire \blk00000003/sig000000b7 ;
  wire \blk00000003/sig000000b6 ;
  wire \blk00000003/sig000000b5 ;
  wire \blk00000003/sig000000b4 ;
  wire \blk00000003/sig000000b3 ;
  wire \blk00000003/sig000000b2 ;
  wire \blk00000003/sig000000b1 ;
  wire \blk00000003/sig000000b0 ;
  wire \blk00000003/sig000000af ;
  wire \blk00000003/sig000000ae ;
  wire \blk00000003/sig000000ad ;
  wire \blk00000003/sig000000ac ;
  wire \blk00000003/sig000000ab ;
  wire \blk00000003/sig000000aa ;
  wire \blk00000003/sig000000a9 ;
  wire \blk00000003/sig000000a8 ;
  wire \blk00000003/sig000000a7 ;
  wire \blk00000003/sig000000a6 ;
  wire \blk00000003/sig000000a5 ;
  wire \blk00000003/sig000000a4 ;
  wire \blk00000003/sig000000a3 ;
  wire \blk00000003/sig000000a2 ;
  wire \blk00000003/sig000000a1 ;
  wire \blk00000003/sig000000a0 ;
  wire \blk00000003/sig0000009f ;
  wire \blk00000003/sig0000009e ;
  wire \blk00000003/sig0000009d ;
  wire \blk00000003/sig0000009c ;
  wire \blk00000003/sig0000009b ;
  wire \blk00000003/sig0000009a ;
  wire \blk00000003/sig00000099 ;
  wire \blk00000003/sig00000098 ;
  wire \blk00000003/sig00000097 ;
  wire \blk00000003/sig00000096 ;
  wire \blk00000003/sig00000095 ;
  wire \blk00000003/sig00000094 ;
  wire \blk00000003/sig00000093 ;
  wire \blk00000003/sig00000092 ;
  wire \blk00000003/sig00000091 ;
  wire \blk00000003/sig00000090 ;
  wire \blk00000003/sig0000008f ;
  wire \blk00000003/sig0000008e ;
  wire \blk00000003/sig0000008d ;
  wire \blk00000003/sig0000008c ;
  wire \blk00000003/sig0000008b ;
  wire \blk00000003/sig0000008a ;
  wire \blk00000003/sig00000089 ;
  wire \blk00000003/sig00000088 ;
  wire \blk00000003/sig00000087 ;
  wire \blk00000003/sig00000086 ;
  wire \blk00000003/sig00000085 ;
  wire \blk00000003/sig00000084 ;
  wire \blk00000003/sig00000083 ;
  wire \blk00000003/sig00000082 ;
  wire \blk00000003/sig00000081 ;
  wire \blk00000003/sig00000080 ;
  wire \blk00000003/sig0000007f ;
  wire \blk00000003/sig0000007e ;
  wire \blk00000003/sig0000007d ;
  wire \blk00000003/sig00000058 ;
  wire \blk00000003/sig00000033 ;
  wire \blk00000003/sig00000032 ;
  wire \blk00000003/sig00000031 ;
  wire \blk00000003/sig00000030 ;
  wire \blk00000003/sig0000002f ;
  wire \blk00000003/sig0000002e ;
  wire \blk00000003/sig0000002d ;
  wire \blk00000003/sig0000002c ;
  wire \blk00000003/sig0000002b ;
  wire \blk00000003/sig0000002a ;
  wire \blk00000003/sig00000029 ;
  wire \blk00000003/sig00000028 ;
  wire \blk00000003/sig00000027 ;
  wire \blk00000003/sig00000026 ;
  wire \blk00000003/sig00000025 ;
  wire \blk00000003/sig00000024 ;
  wire \blk00000003/sig00000023 ;
  wire \blk00000003/sig00000022 ;
  wire \blk00000003/sig00000021 ;
  wire \blk00000003/sig00000020 ;
  wire \blk00000003/sig0000001f ;
  wire \blk00000003/sig0000001e ;
  wire \blk00000003/sig0000001d ;
  wire \blk00000003/sig0000001c ;
  wire \blk00000003/sig0000001b ;
  wire \blk00000003/sig0000001a ;
  wire \blk00000003/sig00000019 ;
  wire \blk00000003/sig00000018 ;
  wire \blk00000003/sig00000017 ;
  wire \blk00000003/sig00000016 ;
  wire \blk00000003/sig00000015 ;
  wire \blk00000003/sig00000014 ;
  wire \blk00000003/sig00000013 ;
  wire \blk00000003/sig00000012 ;
  wire \blk00000003/sig00000011 ;
  wire \blk00000003/sig00000010 ;
  wire \blk00000003/sig0000000f ;
  wire \blk00000003/sig0000000e ;
  wire \blk00000003/sig0000000d ;
  wire \blk00000003/sig0000000c ;
  wire \blk00000003/sig0000000b ;
  wire \blk00000003/sig0000000a ;
  wire \blk00000003/sig00000009 ;
  wire \blk00000003/sig00000008 ;
  wire \blk00000003/sig00000007 ;
  wire \blk00000003/sig00000006 ;
  wire \blk00000003/sig00000005 ;
  wire \blk00000003/sig00000004 ;
  wire NLW_blk00000001_P_UNCONNECTED;
  wire NLW_blk00000002_G_UNCONNECTED;
  wire \NLW_blk00000003/blk00000007_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(47)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(46)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(45)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(44)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(43)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(42)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(41)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(40)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(39)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(38)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(37)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(36)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(35)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(34)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(33)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(32)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(31)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(30)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(29)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(28)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(27)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(26)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(25)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(24)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(23)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(22)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(21)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(20)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(19)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(18)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_P(17)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(17)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(16)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(15)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(14)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(13)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(12)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(11)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(10)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(9)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(8)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(7)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(6)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(5)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(4)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(3)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(2)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(1)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_BCOUT(0)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT(3)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT(2)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT(1)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000007_CARRYOUT(0)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(47)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(46)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(45)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(44)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(43)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(42)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(41)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(40)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(39)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(38)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(37)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(36)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(35)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(34)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(33)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(32)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(31)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(30)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(29)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(28)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(27)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(26)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(25)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(24)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(23)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(22)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(21)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(20)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_P(19)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(17)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(16)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(15)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(14)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(13)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(12)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(11)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(10)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(9)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(8)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(7)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(6)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(5)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(4)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(3)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(2)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(1)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_BCOUT(0)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(29)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(28)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(27)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(26)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(25)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(24)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(23)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(22)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(21)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(20)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(19)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(18)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(17)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(16)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(15)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(14)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(13)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(12)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(11)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(10)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(9)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(8)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(7)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(6)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(5)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(4)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(3)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(2)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(1)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_ACOUT(0)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT(3)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT(2)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT(1)_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000006_CARRYOUT(0)_UNCONNECTED ;
  VCC   blk00000001 (
    .P(NLW_blk00000001_P_UNCONNECTED)
  );
  GND   blk00000002 (
    .G(NLW_blk00000002_G_UNCONNECTED)
  );
  LUT2 #(
    .INIT ( 4'h8 ))
  \blk00000003/blk00000019  (
    .I0(ce),
    .I1(sclr),
    .O(\blk00000003/sig0000007e )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000018  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000dd ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[0])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000017  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000dc ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[1])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000016  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000db ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[2])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000015  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000da ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[3])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000014  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d9 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[4])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000013  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d8 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[5])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000012  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d7 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[6])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000011  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d6 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[7])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000010  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d5 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[8])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000f  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d4 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[9])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000e  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d3 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[10])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000d  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d2 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[11])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000c  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d1 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[12])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000b  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000d0 ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[13])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000a  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000cf ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[14])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000009  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000ce ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[15])
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000008  (
    .C(clk),
    .CE(ce),
    .D(\blk00000003/sig000000cd ),
    .R(\blk00000003/sig0000007e ),
    .Q(p[16])
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 1 ),
    .BREG ( 1 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 0 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h000000000000 ))
  \blk00000003/blk00000007  (
    .CARRYIN(\blk00000003/sig00000058 ),
    .CEA1(\blk00000003/sig00000058 ),
    .CEA2(ce),
    .CEB1(\blk00000003/sig00000058 ),
    .CEB2(ce),
    .CEC(\blk00000003/sig00000058 ),
    .CECTRL(\blk00000003/sig00000058 ),
    .CEP(\blk00000003/sig00000058 ),
    .CEM(ce),
    .CECARRYIN(\blk00000003/sig00000058 ),
    .CEMULTCARRYIN(\blk00000003/sig00000058 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig0000007e ),
    .RSTB(\blk00000003/sig0000007e ),
    .RSTC(\blk00000003/sig00000058 ),
    .RSTCTRL(\blk00000003/sig00000058 ),
    .RSTP(\blk00000003/sig00000058 ),
    .RSTM(\blk00000003/sig0000007e ),
    .RSTALLCARRYIN(\blk00000003/sig00000058 ),
    .CEALUMODE(\blk00000003/sig00000058 ),
    .RSTALUMODE(\blk00000003/sig00000058 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000007_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000007_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000007_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000007_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000058 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000007_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000058 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000007_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , a[17], 
a[17], a[17], a[17], a[17], a[17], a[17], a[17], a[16], a[15], a[14], a[13], a[12], a[11], a[10], a[9], a[8], a[7], a[6], a[5], a[4], a[3], a[2], a[1]
, a[0]}),
    .PCIN({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .B({\blk00000003/sig00000058 , b[16], b[15], b[14], b[13], b[12], b[11], b[10], b[9], b[8], b[7], b[6], b[5], b[4], b[3], b[2], b[1], b[0]}),
    .C({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .CARRYINSEL({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .OPMODE({\blk00000003/sig00000058 , \blk00000003/sig0000007d , \blk00000003/sig0000007d , \blk00000003/sig00000058 , \blk00000003/sig0000007d , 
\blk00000003/sig00000058 , \blk00000003/sig0000007d }),
    .BCIN({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .ALUMODE({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .PCOUT({\blk00000003/sig0000007f , \blk00000003/sig00000080 , \blk00000003/sig00000081 , \blk00000003/sig00000082 , \blk00000003/sig00000083 , 
\blk00000003/sig00000084 , \blk00000003/sig00000085 , \blk00000003/sig00000086 , \blk00000003/sig00000087 , \blk00000003/sig00000088 , 
\blk00000003/sig00000089 , \blk00000003/sig0000008a , \blk00000003/sig0000008b , \blk00000003/sig0000008c , \blk00000003/sig0000008d , 
\blk00000003/sig0000008e , \blk00000003/sig0000008f , \blk00000003/sig00000090 , \blk00000003/sig00000091 , \blk00000003/sig00000092 , 
\blk00000003/sig00000093 , \blk00000003/sig00000094 , \blk00000003/sig00000095 , \blk00000003/sig00000096 , \blk00000003/sig00000097 , 
\blk00000003/sig00000098 , \blk00000003/sig00000099 , \blk00000003/sig0000009a , \blk00000003/sig0000009b , \blk00000003/sig0000009c , 
\blk00000003/sig0000009d , \blk00000003/sig0000009e , \blk00000003/sig0000009f , \blk00000003/sig000000a0 , \blk00000003/sig000000a1 , 
\blk00000003/sig000000a2 , \blk00000003/sig000000a3 , \blk00000003/sig000000a4 , \blk00000003/sig000000a5 , \blk00000003/sig000000a6 , 
\blk00000003/sig000000a7 , \blk00000003/sig000000a8 , \blk00000003/sig000000a9 , \blk00000003/sig000000aa , \blk00000003/sig000000ab , 
\blk00000003/sig000000ac , \blk00000003/sig000000ad , \blk00000003/sig000000ae }),
    .P({\NLW_blk00000003/blk00000007_P(47)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(46)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(45)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(44)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(43)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(42)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(41)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(40)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(39)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(38)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(37)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(36)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(35)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(34)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(33)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(32)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(31)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(30)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(29)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(28)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(27)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(26)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(25)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(24)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(23)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(22)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(21)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(20)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(19)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_P(18)_UNCONNECTED , \NLW_blk00000003/blk00000007_P(17)_UNCONNECTED , \blk00000003/sig000000cd , \blk00000003/sig000000ce 
, \blk00000003/sig000000cf , \blk00000003/sig000000d0 , \blk00000003/sig000000d1 , \blk00000003/sig000000d2 , \blk00000003/sig000000d3 , 
\blk00000003/sig000000d4 , \blk00000003/sig000000d5 , \blk00000003/sig000000d6 , \blk00000003/sig000000d7 , \blk00000003/sig000000d8 , 
\blk00000003/sig000000d9 , \blk00000003/sig000000da , \blk00000003/sig000000db , \blk00000003/sig000000dc , \blk00000003/sig000000dd }),
    .BCOUT({\NLW_blk00000003/blk00000007_BCOUT(17)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(16)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(15)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(14)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(13)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(12)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(11)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(10)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(9)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(8)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(7)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(6)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(5)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(4)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(3)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(2)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_BCOUT(1)_UNCONNECTED , \NLW_blk00000003/blk00000007_BCOUT(0)_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .ACOUT({\blk00000003/sig000000af , \blk00000003/sig000000b0 , \blk00000003/sig000000b1 , \blk00000003/sig000000b2 , \blk00000003/sig000000b3 , 
\blk00000003/sig000000b4 , \blk00000003/sig000000b5 , \blk00000003/sig000000b6 , \blk00000003/sig000000b7 , \blk00000003/sig000000b8 , 
\blk00000003/sig000000b9 , \blk00000003/sig000000ba , \blk00000003/sig000000bb , \blk00000003/sig000000bc , \blk00000003/sig000000bd , 
\blk00000003/sig000000be , \blk00000003/sig000000bf , \blk00000003/sig000000c0 , \blk00000003/sig000000c1 , \blk00000003/sig000000c2 , 
\blk00000003/sig000000c3 , \blk00000003/sig000000c4 , \blk00000003/sig000000c5 , \blk00000003/sig000000c6 , \blk00000003/sig000000c7 , 
\blk00000003/sig000000c8 , \blk00000003/sig000000c9 , \blk00000003/sig000000ca , \blk00000003/sig000000cb , \blk00000003/sig000000cc }),
    .CARRYOUT({\NLW_blk00000003/blk00000007_CARRYOUT(3)_UNCONNECTED , \NLW_blk00000003/blk00000007_CARRYOUT(2)_UNCONNECTED , 
\NLW_blk00000003/blk00000007_CARRYOUT(1)_UNCONNECTED , \NLW_blk00000003/blk00000007_CARRYOUT(0)_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "CASCADE" ),
    .BCASCREG ( 2 ),
    .BREG ( 2 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 0 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h000000000000 ))
  \blk00000003/blk00000006  (
    .CARRYIN(\blk00000003/sig00000058 ),
    .CEA1(\blk00000003/sig00000058 ),
    .CEA2(ce),
    .CEB1(ce),
    .CEB2(ce),
    .CEC(\blk00000003/sig00000058 ),
    .CECTRL(\blk00000003/sig00000058 ),
    .CEP(ce),
    .CEM(\blk00000003/sig00000058 ),
    .CECARRYIN(\blk00000003/sig00000058 ),
    .CEMULTCARRYIN(\blk00000003/sig00000058 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig0000007e ),
    .RSTB(\blk00000003/sig0000007e ),
    .RSTC(\blk00000003/sig00000058 ),
    .RSTCTRL(\blk00000003/sig00000058 ),
    .RSTP(\blk00000003/sig0000007e ),
    .RSTM(\blk00000003/sig00000058 ),
    .RSTALLCARRYIN(\blk00000003/sig00000058 ),
    .CEALUMODE(\blk00000003/sig00000058 ),
    .RSTALUMODE(\blk00000003/sig00000058 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000006_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000006_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000006_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000006_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000058 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000006_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000058 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000006_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .PCIN({\blk00000003/sig0000007f , \blk00000003/sig00000080 , \blk00000003/sig00000081 , \blk00000003/sig00000082 , \blk00000003/sig00000083 , 
\blk00000003/sig00000084 , \blk00000003/sig00000085 , \blk00000003/sig00000086 , \blk00000003/sig00000087 , \blk00000003/sig00000088 , 
\blk00000003/sig00000089 , \blk00000003/sig0000008a , \blk00000003/sig0000008b , \blk00000003/sig0000008c , \blk00000003/sig0000008d , 
\blk00000003/sig0000008e , \blk00000003/sig0000008f , \blk00000003/sig00000090 , \blk00000003/sig00000091 , \blk00000003/sig00000092 , 
\blk00000003/sig00000093 , \blk00000003/sig00000094 , \blk00000003/sig00000095 , \blk00000003/sig00000096 , \blk00000003/sig00000097 , 
\blk00000003/sig00000098 , \blk00000003/sig00000099 , \blk00000003/sig0000009a , \blk00000003/sig0000009b , \blk00000003/sig0000009c , 
\blk00000003/sig0000009d , \blk00000003/sig0000009e , \blk00000003/sig0000009f , \blk00000003/sig000000a0 , \blk00000003/sig000000a1 , 
\blk00000003/sig000000a2 , \blk00000003/sig000000a3 , \blk00000003/sig000000a4 , \blk00000003/sig000000a5 , \blk00000003/sig000000a6 , 
\blk00000003/sig000000a7 , \blk00000003/sig000000a8 , \blk00000003/sig000000a9 , \blk00000003/sig000000aa , \blk00000003/sig000000ab , 
\blk00000003/sig000000ac , \blk00000003/sig000000ad , \blk00000003/sig000000ae }),
    .B({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , b[17]}),
    .C({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .CARRYINSEL({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .OPMODE({\blk00000003/sig0000007d , \blk00000003/sig00000058 , \blk00000003/sig0000007d , \blk00000003/sig00000058 , \blk00000003/sig0000007d , 
\blk00000003/sig00000058 , \blk00000003/sig0000007d }),
    .BCIN({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , 
\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .ALUMODE({\blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 , \blk00000003/sig00000058 }),
    .PCOUT({\blk00000003/sig00000004 , \blk00000003/sig00000005 , \blk00000003/sig00000006 , \blk00000003/sig00000007 , \blk00000003/sig00000008 , 
\blk00000003/sig00000009 , \blk00000003/sig0000000a , \blk00000003/sig0000000b , \blk00000003/sig0000000c , \blk00000003/sig0000000d , 
\blk00000003/sig0000000e , \blk00000003/sig0000000f , \blk00000003/sig00000010 , \blk00000003/sig00000011 , \blk00000003/sig00000012 , 
\blk00000003/sig00000013 , \blk00000003/sig00000014 , \blk00000003/sig00000015 , \blk00000003/sig00000016 , \blk00000003/sig00000017 , 
\blk00000003/sig00000018 , \blk00000003/sig00000019 , \blk00000003/sig0000001a , \blk00000003/sig0000001b , \blk00000003/sig0000001c , 
\blk00000003/sig0000001d , \blk00000003/sig0000001e , \blk00000003/sig0000001f , \blk00000003/sig00000020 , \blk00000003/sig00000021 , 
\blk00000003/sig00000022 , \blk00000003/sig00000023 , \blk00000003/sig00000024 , \blk00000003/sig00000025 , \blk00000003/sig00000026 , 
\blk00000003/sig00000027 , \blk00000003/sig00000028 , \blk00000003/sig00000029 , \blk00000003/sig0000002a , \blk00000003/sig0000002b , 
\blk00000003/sig0000002c , \blk00000003/sig0000002d , \blk00000003/sig0000002e , \blk00000003/sig0000002f , \blk00000003/sig00000030 , 
\blk00000003/sig00000031 , \blk00000003/sig00000032 , \blk00000003/sig00000033 }),
    .P({\NLW_blk00000003/blk00000006_P(47)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(46)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(45)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(44)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(43)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(42)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(41)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(40)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(39)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(38)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(37)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(36)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(35)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(34)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(33)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(32)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(31)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(30)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(29)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(28)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(27)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(26)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(25)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(24)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(23)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(22)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_P(21)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(20)_UNCONNECTED , \NLW_blk00000003/blk00000006_P(19)_UNCONNECTED , 
p[35], p[34], p[33], p[32], p[31], p[30], p[29], p[28], p[27], p[26], p[25], p[24], p[23], p[22], p[21], p[20], p[19], p[18], p[17]}),
    .BCOUT({\NLW_blk00000003/blk00000006_BCOUT(17)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(16)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(15)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(14)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(13)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(12)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(11)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(10)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(9)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(8)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(7)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(6)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(5)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(4)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(3)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(2)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_BCOUT(1)_UNCONNECTED , \NLW_blk00000003/blk00000006_BCOUT(0)_UNCONNECTED }),
    .ACIN({\blk00000003/sig000000af , \blk00000003/sig000000b0 , \blk00000003/sig000000b1 , \blk00000003/sig000000b2 , \blk00000003/sig000000b3 , 
\blk00000003/sig000000b4 , \blk00000003/sig000000b5 , \blk00000003/sig000000b6 , \blk00000003/sig000000b7 , \blk00000003/sig000000b8 , 
\blk00000003/sig000000b9 , \blk00000003/sig000000ba , \blk00000003/sig000000bb , \blk00000003/sig000000bc , \blk00000003/sig000000bd , 
\blk00000003/sig000000be , \blk00000003/sig000000bf , \blk00000003/sig000000c0 , \blk00000003/sig000000c1 , \blk00000003/sig000000c2 , 
\blk00000003/sig000000c3 , \blk00000003/sig000000c4 , \blk00000003/sig000000c5 , \blk00000003/sig000000c6 , \blk00000003/sig000000c7 , 
\blk00000003/sig000000c8 , \blk00000003/sig000000c9 , \blk00000003/sig000000ca , \blk00000003/sig000000cb , \blk00000003/sig000000cc }),
    .ACOUT({\NLW_blk00000003/blk00000006_ACOUT(29)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(28)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(27)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(26)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(25)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(24)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(23)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(22)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(21)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(20)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(19)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(18)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(17)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(16)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(15)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(14)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(13)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(12)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(11)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(10)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(9)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(8)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(7)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(6)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(5)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(4)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(3)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(2)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_ACOUT(1)_UNCONNECTED , \NLW_blk00000003/blk00000006_ACOUT(0)_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000003/blk00000006_CARRYOUT(3)_UNCONNECTED , \NLW_blk00000003/blk00000006_CARRYOUT(2)_UNCONNECTED , 
\NLW_blk00000003/blk00000006_CARRYOUT(1)_UNCONNECTED , \NLW_blk00000003/blk00000006_CARRYOUT(0)_UNCONNECTED })
  );
  VCC   \blk00000003/blk00000005  (
    .P(\blk00000003/sig0000007d )
  );
  GND   \blk00000003/blk00000004  (
    .G(\blk00000003/sig00000058 )
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

    wire GSR;
    wire GTS;
    wire PRLD;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
